# --------------------------------------------------------------------------------
# render.yaml — ensure Redis link and env-vars injection
# --------------------------------------------------------------------------------

services:
  # PostgreSQL database
  - type: db
    name: ai-genesis-dbnew
    plan: free
    postgresMajorVersion: 16
    region: oregon

  # Redis for Celery broker & backend
  - type: redis
    name: ai-genesis-redis
    plan: free
    region: oregon

  # Flask Web Service
  - type: web
    name: AI-Genesis-Engine
    runtime: docker
    region: oregon
    plan: free

    healthCheckPath: /healthz

    buildCommand: "pip install -r requirements.txt"
    startCommand: >
      echo '⏳ Running DB migrations...' &&
      flask db upgrade &&
      echo '✅ DB migrations done' &&
      echo '🚀 Starting Gunicorn...' &&
      gunicorn --log-level info --access-logfile - --bind 0.0.0.0:$PORT wsgi:app

    envVars:
      - key: FLASK_CONFIG
        value: prod
      - key: FLASK_APP
        value: app

      # Link to Postgres
      - fromDatabase:
          name: ai-genesis-dbnew
          property: connectionString
        key: DATABASE_URL

      # Link to Redis (broker & backend)
      - fromService:
          type: redis
          name: ai-genesis-redis
          property: connectionString
        key: CELERY_BROKER_URL
      - fromService:
          type: redis
          name: ai-genesis-redis
          property: connectionString
        key: CELERY_RESULT_BACKEND

      # Secrets (set these in the Render dashboard under Environment)
      - key: SECRET_KEY
        sync: false
      - key: SENTRY_DSN
        sync: false
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_PRICE_ID
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: GOOGLE_API_KEY
        sync: false
      - key: HF_API_KEY
        sync: false
      - key: SERPER_API_KEY
        sync: false

  # Celery Worker for background tasks
  - type: worker
    name: ai-genesis-worker
    runtime: docker
    region: oregon
    plan: free

    startCommand: >
      echo '🔄 Starting Celery worker...' &&
      celery -A celery_worker.celery worker --loglevel=info

    envVars:
      - key: FLASK_CONFIG
        value: prod
      - key: FLASK_APP
        value: app
      - fromDatabase:
          name: ai-genesis-dbnew
          property: connectionString
        key: DATABASE_URL
      - fromService:
          type: redis
          name: ai-genesis-redis
          property: connectionString
        key: CELERY_BROKER_URL
      - fromService:
          type: redis
          name: ai-genesis-redis
          property: connectionString
        key: CELERY_RESULT_BACKEND
      - key: SECRET_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: SENTRY_DSN
        sync: false

# End of render.yaml, commit & push to apply.
